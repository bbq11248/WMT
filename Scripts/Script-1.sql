-- 게시판
-- 전체 조회
SELECT SEQ,ID,TITLE,CONTENT,REGDATE FROM BOARD;

-- 상세 조회
SELECT SEQ,ID,TITLE,CONTENT,REGDATE FROM BOARD WHERE SEQ = '6';

-- 글 입력
INSERT INTO BOARD
(SEQ,ID,TITLE,CONTENT,REGDATE)
VALUES(BOARD_SEQ.NEXTVAL, 'JOUNGHYU', '정숙한 영화예매', '저희 싸이트에 오신걸 환영합니다! 첫 예매는 3000원 할인!', SYSDATE);

-- 글 수정
UPDATE BOARD SET TITLE = 'ANGKIMOTTI',CONTENT= 'ANGANGKIMOTTING',REGDATE=SYSDATE WHERE ID = 'JINSOOK' AND SEQ = '';

-- 글 삭제
DELETE FROM BOARD WHERE SEQ = '5';

---------------------------------------------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------
--등록
INSERT INTO TICKETING 
	(TICKETING_NO, MOVIE_PLAY_NO, ID, SEAT_NO)
		VALUES('TKN0002', 'MPN0001', 'JOUNGHYU', 'A1,A2');

INSERT INTO TICKETING 
	(TICKETING_NO, ID)
		VALUES('충전1', 'JOUNGHYU');

INSERT INTO MOVIE_PLAY
(MOVIE_PLAY_NO, MOVIE_NO, THEATER_NO)
VALUES('MPN0001', 'M000001', 'TN0001');


INSERT INTO THEATER
(THEATER_NO, THEATER_NAME, THEATER_LOCAL)
VALUES('충전', 'CGV강남점', '강남구 역삼동 역삼역 3번출구');

INSERT INTO MOVIE
(MOVIE_NO, MOVIE_NAME, MOVIE_FOREMAN, MOVIE_GENRE, MOVIE_OPENDAY, MOVIE_COUNTRY, MOVIE_TIME)
VALUES('M000001', '행복한 정휴 아저씨', '정휴', '코미디', '20190503', 'KOR', '02:07:31');

INSERT INTO MOVIE_THEATER
(THEATER_NO, MOVIE_THEATER_NO, MOVIE_THEATER_NAME)
VALUES('TN0002', 'MTN0001', '1번 상영관');

INSERT INTO SEATMANAGER
(SEAT, MOVIE_THEATER_NO, PRICE_NO, ROWSEAT, COLSEAT)
VALUES('MTS0002', 'MTN0001', 'MTSP1', 'A', '2');

--1_ 성인2D, 2_청소년 2D, 3 시니어, 4 장애인
--11_ 성인3D, 21_ 청소년3D, 31 시니어3D, 41 장애인3D
INSERT INTO SEATPRICE
(PRICE_NO, SEAT_MONEY)
VALUES('MTSP41', 8000);


ALTER TABLE HAPPY.PAYMENT DROP CONSTRAINT PAYMENT_FK1;









--=================================================================================================================================================
-- 회원등록
-- LOGIN Y 확인 
INSERT INTO MOVIEMEMBER
(SEQ,ID,PW,NAME,NICKNAME,BIRTHDAY,PHONE,ADDRESS,EMAIL,AUTH,REGDATE)
VALUES(MOVIEMEMBER_SEQ.NEXTVAL,'E','E','양진숙','규동이엄마',
'951230','01080702906','수지구 풍덕천2동','wlstnr7833@naver.com','USER',SYSDATE);

INSERT INTO MILEAGEMANAGER
(MILEAGE_SEQ, ID, MILEAGE)
VALUES(MILEAGE_SEQ.NEXTVAL, 'F', 0);

-- 로그인
-- Select -> DTO -> Session 담아서 -> 사용
-- 로그아웃
-- Session 삭제
UPDATE MOVIEMEMBER SET LOGIN = 'Y' WHERE ID = 'JINSOOK' AND PW = 'JINSOOK';

-- 회원정보 수정
-- BIRTHDAY가 값인 이유? BIRTHDAY 확인 정보 화면에서 받음
-- ID,PW,NICKNAME,BIRTHDAY,PHONE,ADDRESS
UPDATE MOVIEMEMBER SET PW = 1234, NICKNAME = '진숙짱', PHONE = '01012341234', ADDRESS = '역삼역삼'
WHERE ID = 'JINSOOK' AND BIRTHDAY = '951230';

-- 회원관리-----------------------

-- 아이디 찾기(WBS)에 없음
-- NAME, PHONE
SELECT ID FROM MOVIEMEMBER WHERE NAME = '양진숙' AND PHONE = '01080702906';


-- 비밀번호 찾기(WBS)에 없음
-- ID, EMAIL
SELECT PW FROM MOVIEMEMBER WHERE ID = 'JINSOOK' AND EMAIL = 'wlstnr7833@naver.com' ;

-- 가입정보를 확인하는 기능(쿼리 없음)
SELECT SEQ,ID,PW,NAME,NICKNAME,BIRTHDAY,PHONE,ADDRESS,EMAIL,AUTH,REGDATE,LOGIN 
FROM MOVIEMEMBER WHERE ID = 'JINSOOK';

-- 가입자 전체보기
SELECT SEQ,ID,PW,NAME,NICKNAME,BIRTHDAY,PHONE,ADDRESS,EMAIL,AUTH,REGDATE,LOGIN FROM MOVIEMEMBER;


--------------------------------------------------------------------------------------------------------
-- 마일리지---------------

-- 마일리지 충전
-- 금액 10000 -> 전체(총금액) 하고
--     -> 내역 
-- 충전내역
-- CHARGE_NO 필요 없는 컬럼
-- PAYMENT_NO 내역번호, ID 자신, MILEAGE 총보유, PRICE 현재 입력, 시간
-- 마일리 충전                           
UPDATE MILEAGEMANAGER SET MILEAGE = MILEAGE + 10000 WHERE ID = 'JOUNGHYU';

-- 충전 CGN, 사용 PMN 
INSERT INTO PAYMENT(PAYMENT_NO, ID, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('PM'||PAYMENT_NO_SEQ.NEXTVAL, 'JOUNGHYU', (SELECT MILEAGE FROM MILEAGEMANAGER), 10000, SYSDATE);

SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JOUNGHYU';


-- 마일리지 사용
UPDATE MILEAGEMANAGER SET MILEAGE = MILEAGE -10000 WHERE ID = 'JOUNGHYU';

INSERT INTO PAYMENT
(PAYMENT_NO, TICKETING_NO, ID, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('PM'||PAYMENT_NO_SEQ.NEXTVAL,'TKN0002', 'JINSOOK', (SELECT MILEAGE FROM MILEAGEMANAGER), 10000, SYSDATE);

-- 조회
SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JOUNGHYU';

-- 결재내역
SELECT PAYMENT_NO, TICKETING_NO, ID, MILEAGE, PRICE, MILEAGE_TIME FROM PAYMENT
	WHERE ID = 'JOUNGHYU' 
		ORDER BY MILEAGE_TIME DESC;.

-- 예매내역 
-- 티켓번호, 영화관 이름, 영화 이름
SELECT  TICKETING_NO, THEATER_NAME, MOVIE_NAME
	FROM TICKETING JOIN MOVIE_PLAY
		USING(MOVIE_PLAY_NO)
			JOIN THEATER
			 USING(THEATER_NO)
			 	JOIN MOVIE
			 		USING(MOVIE_NO)
		WHERE ID = 'JOUNGHYU';

-- 예매 상세 조회
SELECT  TICKETING_NO, THEATER_NAME, MOVIE_NAME, MOVIE_TIME,
		SEAT_NO
	FROM TICKETING JOIN MOVIE_PLAY
		USING(MOVIE_PLAY_NO)
			JOIN THEATER
			 USING(THEATER_NO)
			 	JOIN MOVIE
			 		USING(MOVIE_NO)
		WHERE ID = 'JOUNGHYU'
		AND TICKETING_NO ='TKN0003';
	
-- 영화 예매
-- 영화선택 -> 영화관 선택 -> 상영관 -> 시간 -> 좌석

--1) 영화 전체 보여주기
SELECT MOVIE_NO, MOVIE_NAME 영화이름, MOVIE_OPENDAY 개봉일,
       MOVIE_GENRE 장르, MOVIE_TIME 영화시작
	FROM MOVIE;

--1-1)
--1) 영화관 영화선택
SELECT MOVIE_NO, MOVIE_NAME 영화이름, MOVIE_OPENDAY 개봉일,
       MOVIE_GENRE 장르, MOVIE_TIME 영화시작
	FROM MOVIE
		WHERE MOVIE_NO = 'MN2';

	
--2) 영화관 선택
SELECT MOVIE_THEATER_NO, THEATER_NAME, THEATER_LOCAL, MOVIE_THEATER_NAME, MOVIE_TIMES
	FROM THEATER
			JOIN MOVIE_THEATER
				USING(THEATER_NO)
		WHERE MOVIE_NO ='MN2';
	
-- 3) 영화>영화관>상관 -> 좌석 선택
--> Check box -> [A1,A2] -> Arrays.toString() -> [A1,A2] -> [] 제거 -> A1,A2
SELECT ROWSEAT, COLSEAT, SEAT_MONEY
 	FROM SEATMANAGER
		WHERE SEAT = 'ST1';
	

INSERT INTO TICKETING(TICKETING_NO, MOVIE_THEATER_NO, ID, SEAT_NO)
	VALUES('TKN'||TICKETING_NO_SEQ.NEXTVAL,'MTN14', 'JINSOOK','A1,A2');
	
	
	
	
	
	
	
	
	
	
	
	
INSERT INTO TICKETING 
   (TICKETING_NO, MOVIE_PLAY_NO, ID, SEAT_NO)
      VALUES('TKN0002', 'MPN0001', 'JOUNGHYU', 'A1,A2');

INSERT INTO TICKETING 
   (TICKETING_NO, ID)
      VALUES('충전1', 'JOUNGHYU');

INSERT INTO MOVIE_PLAY
(MOVIE_PLAY_NO, MOVIE_NO, THEATER_NO)
VALUES('MPN0001', 'M000001', 'TN0001');


INSERT INTO THEATER
(THEATER_NO, THEATER_NAME, THEATER_LOCAL)
VALUES('충전', 'CGV강남점', '강남구 역삼동 역삼역 3번출구');

INSERT INTO MOVIE
(MOVIE_NO, MOVIE_NAME, MOVIE_FOREMAN, MOVIE_GENRE, MOVIE_OPENDAY, MOVIE_COUNTRY, MOVIE_TIME)
VALUES('M000001', '행복한 정휴 아저씨', '정휴', '코미디', '20190503', 'KOR', '02:07:31');

INSERT INTO MOVIE_THEATER
(THEATER_NO, MOVIE_THEATER_NO, MOVIE_THEATER_NAME)-- 회원등록
-- LOGIN Y 확인 
INSERT INTO MOVIEMEMBER
(SEQ,ID,PW,NAME,NICKNAME,BIRTHDAY,PHONE,ADDRESS,EMAIL,AUTH,REGDATE,LOGIN)
VALUES(MOVIEMEMBER_SEQ.NEXTVAL,'JINSOOK','JINSOOK','양진숙','규동이엄마',
'951230','01080702906','수지구 풍덕천2동','wlstnr7833@naver.com','USER',SYSDATE,'Y');

-- 로그인
-- Select -> DTO -> Session 담아서 -> 사용
-- 로그아웃
-- Session 삭제
UPDATE MOVIEMEMBER SET LOGIN = 'Y' WHERE ID = 'JINSOOK' AND PW = 'JINSOOK';

-- 회원정보 수정
-- BIRTHDAY가 값인 이유? BIRTHDAY 확인 정보 화면에서 받음
-- ID,PW,NICKNAME,BIRTHDAY,PHONE,ADDRESS
UPDATE MOVIEMEMBER SET PW = 1234, NICKNAME = '진숙짱', PHONE = '01012341234', ADDRESS = '역삼역삼'
WHERE ID = 'JINSOOK' AND BIRTHDAY = '951230';

-- 회원관리-----------------------

-- 아이디 찾기(WBS)에 없음
-- NAME, PHONE
SELECT ID FROM MOVIEMEMBER WHERE NAME = '양진숙' AND PHONE = '01080702906';


-- 비밀번호 찾기(WBS)에 없음
-- ID, EMAIL
SELECT PW FROM MOVIEMEMBER WHERE ID = 'JINSOOK' AND EMAIL = 'wlstnr7833@naver.com' ;

-- 가입정보를 확인하는 기능(쿼리 없음)
SELECT SEQ,ID,PW,NAME,NICKNAME,BIRTHDAY,PHONE,ADDRESS,EMAIL,AUTH,REGDATE,LOGIN 
FROM MOVIEMEMBER WHERE ID = 'JINSOOK';

-- 가입자 전체보기
SELECT SEQ,ID,PW,NAME,NICKNAME,BIRTHDAY,PHONE,ADDRESS,EMAIL,AUTH,REGDATE,LOGIN FROM MOVIEMEMBER;


--------------------------------------------------------------------------------------------------------
-- 마일리지---------------

-- 마일리지 충전
-- 금액 10000 -> 전체(총금액) 하고
--     -> 내역 
-- 충전내역
-- CHARGE_NO 필요 없는 컬럼
-- PAYMENT_NO 내역번호, ID 자신, MILEAGE 총보유, PRICE 현재 입력, 시간
-- 마일리 충전                           
UPDATE MILEAGEMANAGER SET MILEAGE = MILEAGE + 10000 WHERE ID = 'JOUNGHYU';

-- 충전 CG, 사용 PM 
INSERT INTO PAYMENT(PAYMENT_NO, ID, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('CG01', 'JOUNGHYU', (SELECT MILEAGE FROM MILEAGEMANAGER), 10000, SYSDATE);
                                   

-- 마일리지 사용
UPDATE MILEAGEMANAGER SET MILEAGE = MILEAGE -10000 WHERE ID = 'JOUNGHYU';

INSERT INTO PAYMENT
(PAYMENT_NO, TICKETING_NO, ID, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('PM01','TKN0002', 'JOUNGHYU', (SELECT MILEAGE FROM MILEAGEMANAGER), 10000, SYSDATE);

-- 조회
SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JOUNGHYU';

-- 결재내역
SELECT PAYMENT_NO, TICKETING_NO, ID, MILEAGE, PRICE, MILEAGE_TIME FROM PAYMENT
	WHERE ID = 'JOUNGHYU' 
		ORDER BY MILEAGE_TIME DESC;.

-- 예매내역 
-- 티켓번호, 영화관 이름, 영화 이름
SELECT  TICKETING_NO, THEATER_NAME, MOVIE_NAME
	FROM TICKETING JOIN MOVIE_PLAY
		USING(MOVIE_PLAY_NO)
			JOIN THEATER
			 USING(THEATER_NO)
			 	JOIN MOVIE
			 		USING(MOVIE_NO)
		WHERE ID = 'JOUNGHYU';

SELECT * FROM MOVIE_PLAY;
SELECT * FROM TICKETING;

SELECT TICKETING_NO, THEATER_NAME, MOVIE_NAME, MOVIE_TIME, SEAT_NO, MOVIE_TIMES


-- 예매 상세 조회
SELECT  TICKETING_NO, THEATER_NAME, MOVIE_NAME, MOVIE_TIME, SEAT_NO
	FROM TICKETING JOIN MOVIE_PLAY
		USING(MOVIE_PLAY_NO)
			JOIN THEATER
			 USING(THEATER_NO)
			 	JOIN MOVIE
			 		USING(MOVIE_NO)
			 			JOIN MOVIE_THEATER
			 				USING(MOVIE_NO)
		WHERE ID = 'JINSOOK' AND TICKETING_NO ='TKN2';

-- 티켓번호, 영화관, 영화이름, 영화시작, 좌섯
SELECT  THE.THEATER_NO,M.MOVIE_NO,TICKETING_NO 티켓번호, T.MOVIE_PLAY_NO 상영중인영화, MOVIE_NAME, MOVIE_TIME  상영시간, SEAT_NO
	FROM TICKETING T JOIN MOVIE_PLAY M
		ON T.MOVIE_PLAY_NO = M.MOVIE_PLAY_NO			
			JOIN MOVIE MOV
			ON M.MOVIE_NO = MOV.MOVIE_NO
				JOIN THEATER THE
					ON M.THEATER_NO = THE.THEATER_NO
		WHERE ID = 'JINSOOK' AND TICKETING_NO ='TKN2';
SELECT TICKETING_NO 티켓번호, MOVIE_THEATER_NO 상영관상영영화번호, MOVIE_NAME 영화이름, MOVIE_TIMES 시작시간, SEAT_NO 좌석번호
	FROM TICKETING JOIN MOVIE_THEATER
		USING (MOVIE_THEATER_NO)
			JOIN MOVIE
				USING(MOVIE_NO)
			WHERE ID = 'JINSOOK';

	SELECT * FROM MOVIE JOIN MOVIE_THEATER USING (MOVIE_NO) WHERE MOVIE_NO='MN1';
-- 영화 예매
-- 영화선택 -> 영화관 선택 -> 상영관 -> 시간 -> 좌석




INSERT INTO MOVIE_PLAY
(MOVIE_PLAY_NO, MOVIE_NO, THEATER_NO)
VALUES('MPN'||MOVIE_NO_SEQ.NEXTVAL, 'MN4', 'TN7');

--1) 영화 전체 보여주기
SELECT MOVIE_NO, MOVIE_NAME 영화이름, MOVIE_OPENDAY 개봉일,
       MOVIE_GENRE 장르, MOVIE_TIME 영화시작
	FROM MOVIE;

--1-1)
--1) 영화선택
SELECT MOVIE_NO, MOVIE_NAME 영화이름, MOVIE_OPENDAY 개봉일,
       MOVIE_GENRE 장르, MOVIE_TIME 영화시작
	FROM MOVIE
		WHERE MOVIE_NO = 'MN3';
	
--2) 영화관 선택
SELECT MOVIE_PLAY_NO, MOVIE_THEATER_NO, THEATER_NAME, THEATER_LOCAL, MOVIE_THEATER_NAME, MOVIE_TIMES
	FROM MOVIE_PLAY JOIN THEATER
		USING(THEATER_NO)
			JOIN MOVIE_THEATER MT
				USING(THEATER_NO)
		WHERE MT.MOVIE_NO ='MN3';
	
	
-- 3) 영화>영화관>상관 -> 좌석 선택
--> Check box -> [A1,A2] -> Arrays.toString() -> [A1,A2] -> [] 제거 -> A1,A2
SELECT ROWSEAT, COLSEAT, SEAT_MONEY
 	FROM SEATMANAGER JOIN SEATPRICE
 		USING(PRICE_NO)
 		JOIN 
		WHERE MOVIE_THEATER_NO = 'MTN1';
	
SELECT MOVIE_NO, MOVIE_THEATER_NO, ROWSEAT||COLSEAT, SEAT_MONEY
	FROM MOVIE_THEATER 
		JOIN SEATMANAGER
			USING(MOVIE_THEATER_NO)
		WHERE MOVIE_THEATER_NO = 'MTN1';
	

DELETE FROM TICKETING WHERE ID = 'JINSOOK';
	

INSERT INTO TICKETING(TICKETING_NO, MOVIE_THEATER_NO, ID, SEAT_NO)
	VALUES('TKN'||TICKETING_NO_SEQ.NEXTVAL,'MTN14', 'JINSOOK', (SELECT ROWSEAT||COLSEAT FROM SEATMANAGER WHERE ROWSEAT = 'A' AND COLSEAT = '2'));

SELECT TICKETING_NO, ID, SEAT_NO, THEATER_NAME, MOVIE_THEATER_NAME, MOVIE_NAME, MOVIE_TIMES, TIMES
	FROM TICKETING JOIN MOVIE_THEATER
		USING(MOVIE_THEATER_NO)
			JOIN MOVIE
				USING(MOVIE_NO)
					JOIN THEATER
						USING(THEATER_NO)
		WHERE ID ='JINSOOK';

SELECT * FROM TICKETING WHERE ID = 'JINSOOK';
--======================================================================================================
--======================================================================================================
--======================================================================================================
--======================================================================================================




--영화관=========================================================================
--등록 
INSERT INTO THEATER
(THEATER_NO, THEATER_NAME, THEATER_LOCAL)
VALUES('TN'||THEATER_NO_SEQ.NEXTVAL, '영등포CGV', '서울특별시 영등포구 영등포동4가 441-10');
--수정
UPDATE THEATER
SET THEATER_NAME='', THEATER_LOCAL=''
WHERE THEATER_NO='';
--조회
SELECT * FROM THEATER;
--==================================================================================
--상영관--------------------------------------------------------------------------
-- 등록
INSERT INTO MOVIE_THEATER
	(MOVIE_THEATER_NO, THEATER_NO, MOVIE_NO, MOVIE_TIMES, MOVIE_THEATER_NAME)
		VALUES('MTN'||MOVIE_THEATER_NO_SEQ.NEXTVAL, 'TN1', 'MN5', TO_DATE('19/05/15 09:15', 'YY/MM/DD HH24:MI'), '5관');

--수정
UPDATE MOVIE_THEATER
SET MOVIE_THEATER_NO='', MOVIE_THEATER_NAME=''
WHERE THEATER_NO='';

--상세
SELECT THEATER_NAME, MOVIE_THEATER_NAME, ROWSEAT, COLSEAT
	FROM MOVIE_THEATER JOIN THEATER 
		USING(THEATER_NO) 
			JOIN SEATMANAGER
				USING(MOVIE_THEATER_NO)
		WHERE MOVIE_THEATER_NO = 'MTN0001';

--리스트
SELECT MOVIE_THEATER_NO, THEATER_NAME, MOVIE_THEATER_NAME
	FROM MOVIE_THEATER JOIN THEATER 
		USING(THEATER_NO);
SELECT * FROM MOVIE_THEATER ORDER BY THEATER_NO;
---------------------------------------------------------------------------

---------------------------------------------------------------------------
--좌석 등록
INSERT INTO SEATMANAGER
(SEAT_NO, SEAT, MOVIE_THEATER_NO, SEAT_MONEY, ROWSEAT, COLSEAT)
VALUES('SN'||SEAT_NO_SEQ.NEXTVAL, 'ST1', 'MTN1', 1000, 'C', '16');
--좌석 가격 등록
INSERT INTO SEATPRICE
(PRICE_NO, SEAT_MONEY)
VALUES('SPN'||PRICE_NO_SEQ.NEXTVAL, 10000);

---------------------------------------------------------------------------


--영화=======================================================================================
--등록
INSERT INTO MOVIE
(MOVIE_NO, MOVIE_NAME, MOVIE_FOREMAN, MOVIE_GENRE, MOVIE_OPENDAY, MOVIE_COUNTRY, MOVIE_TIME)
VALUES('MN'||MOVIE_NO_SEQ.NEXTVAL, '나의특별한형제', '육상효', '드라마, 코미디', '20190510', 'KOR', '01:54:12');
--수정
UPDATE MOVIE
SET MOVIE_NAME='', MOVIE_FOREMAN='', MOVIE_GENRE='', MOVIE_OPENDAY='', MOVIE_COUNTRY='', MOVIE_TIME=''
WHERE MOVIE_NO='';
--조회
SELECT * FROM MOVIE;
--===================================================================================

--예매========================================================================================


--결제
UPDATE MILEAGEMANAGER SET MILEAGE = MILEAGE - 6000 WHERE ID = 'JINSOOK';

INSERT INTO PAYMENT
(PAYMENT_NO, TICKETING_NO, ID, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('CG'||PAYMENT_NO_SEQ.NEXTVAL,'TKN1', 'JINSOOK', (SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JINSOOK'), 6000, SYSDATE);
--조회
SELECT * FROM PAYMENT WHERE ID = 'JINSOOK' ORDER BY MILEAGE_TIME DESC;
SELECT * FROM MILEAGEMANAGER WHERE ID = 'JINSOOK';
--취소
UPDATE MILEAGEMANAGER SET MILEAGE = MILEAGE + 6000 WHERE ID = 'JINSOOK';

INSERT INTO PAYMENT
(PAYMENT_NO, TICKETING_NO, ID, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('PC'||PAYMENT_NO_SEQ.NEXTVAL,'TKN1', 'JINSOOK', (SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JINSOOK'), 6000, SYSDATE);

UPDATE PAYMENT SET TICKETING_NO = NULL WHERE TICKETING_NO = 'TKN1' AND PAYMENT_NO = 'PC4';
DELETE FROM TICKETING WHERE TICKETING_NO = 'TKN1';
--===================================================================================
--===============================================================================
--1) 영화 전체 보여주기
SELECT MOVIE_NO, MOVIE_NAME 영화이름, MOVIE_OPENDAY 개봉일,
       MOVIE_GENRE 장르, MOVIE_TIME 영화시작
	FROM MOVIE;

--1-1)
--1) 영화관 영화선택
SELECT MOVIE_NO, MOVIE_NAME 영화이름, MOVIE_OPENDAY 개봉일,
       MOVIE_GENRE 장르, MOVIE_TIME 영화시작
	FROM MOVIE
		WHERE MOVIE_NO = 'MN3';

	
--2) 영화관 선택
SELECT MOVIE_PLAY_NO, MOVIE_THEATER_NO, THEATER_NAME, THEATER_LOCAL, MOVIE_THEATER_NAME
	FROM MOVIE_PLAY JOIN THEATER
		USING(THEATER_NO)
			JOIN MOVIE_THEATER
				USING(THEATER_NO)
		WHERE MOVIE_NO ='MN3';
--3)


-- 3) 영화>영화관>상관 -> 좌석 선택
--> Check box -> [A1,A2] -> Arrays.toString() -> [A1,A2] -> [] 제거 -> A1,A2
SELECT ROWSEAT, COLSEAT, SEAT_MONEY
 	FROM SEATMANAGER JOIN SEATPRICE
 		USING(PRICE_NO)
		WHERE MOVIE_THEATER_NO = 'MTN0001';
	

INSERT INTO TICKETING(TICKETING_NO, MOVIE_PLAY_NO, ID, SEAT_NO)
	VALUES('TKN'||TICKETING_NO_SEQ.NEXTVAL,'MPN0001', 'JOUNGHYU','A1,A2');
--===================================================================================
--===================================================================================
--결제
-- 마일리지 사용
UPDATE MILEAGEMANAGER SET MILEAGE = MILEAGE -10000 WHERE ID = 'JOUNGHYU';

INSERT INTO PAYMENT
(PAYMENT_NO, TICKETING_NO, ID, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('PM'||PAYMENT_NO_SEQ.NEXTVAL,'TKN0002', 'JOUNGHYU', 
(SELECT MILEAGE FROM MILEAGEMANAGER), 10000, SYSDATE);
--===================================================================================









	
	
	
	
	
	
	
	
	
INSERT INTO TICKETING 
   (TICKETING_NO, MOVIE_PLAY_NO, ID, SEAT_NO)
      VALUES('TKN0002', 'MPN0001', 'JOUNGHYU', 'A1,A2');

INSERT INTO TICKETING 
   (TICKETING_NO, ID)
      VALUES('충전1', 'JOUNGHYU');

INSERT INTO MOVIE_PLAY
(MOVIE_PLAY_NO, MOVIE_NO, THEATER_NO)
VALUES('MPN0001', 'M000001', 'TN0001');


INSERT INTO THEATER
(THEATER_NO, THEATER_NAME, THEATER_LOCAL)
VALUES('충전', 'CGV강남점', '강남구 역삼동 역삼역 3번출구');

INSERT INTO MOVIE
(MOVIE_NO, MOVIE_NAME, MOVIE_FOREMAN, MOVIE_GENRE, MOVIE_OPENDAY, MOVIE_COUNTRY, MOVIE_TIME)
VALUES('M000001', '행복한 정휴 아저씨', '정휴', '코미디', '20190503', 'KOR', '02:07:31');

INSERT INTO MOVIE_THEATER
(THEATER_NO, MOVIE_THEATER_NO, MOVIE_THEATER_NAME)
VALUES('TN0002', 'MTN0001', '1번 상영관');

INSERT INTO SEATMANAGER
(SEAT, MOVIE_THEATER_NO, PRICE_NO, ROWSEAT, COLSEAT)
VALUES('MTS0002', 'MTN0001', 'MTSP1', 'A', '2');





VALUES('TN0002', 'MTN0001', '1번 상영관');

INSERT INTO SEATMANAGER
(SEAT, MOVIE_THEATER_NO, PRICE_NO, ROWSEAT, COLSEAT)
VALUES('MTS0002', 'MTN0001', 'MTSP1', 'A', '2');


------------------------
--첫회원가입시 마일리지
INSERT INTO MILEAGEMANAGER
(ID, MILEAGE)
VALUES('JINSOOK', 0);

--충전마일리지
INSERT INTO CHARGEMANAGER
(CHARGE_NO, MONEY)
VALUES('C50000', 50000);

-- 마일리지 충전
INSERT INTO PAYMENT
(PAYMENT_NO, ID, CHARGE_NO, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('CG'||PAYMENT_NO_SEQ.NEXTVAL, 'JINSOOK', 'C10000', (SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JOUNGHYU') 
										+ (SELECT MONEY FROM CHARGEMANAGER WHERE CHARGE_NO = 'C10000'), 
												(SELECT MONEY FROM CHARGEMANAGER WHERE CHARGE_NO = 'C10000'), SYSDATE);

UPDATE MILEAGEMANAGER SET MILEAGE = (SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JOUNGHYU') 
										+ (SELECT MONEY FROM CHARGEMANAGER WHERE CHARGE_NO = 'C10000') WHERE ID = 'JOUNGHYU';

--마일리지 결제
INSERT INTO PAYMENT
(PAYMENT_NO, TICKETING_NO, ID, MILEAGE, PRICE, MILEAGE_TIME)
VALUES('MPN0001', 'TKN0002', 'JINSOOK', 
							(SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JINSOOK') 
								- (SELECT SEAT_MONEY FROM SEATPRICE WHERE PRICE_NO = 'MTSP1'), 
										(SELECT SEAT_MONEY FROM SEATPRICE WHERE PRICE_NO = 'MTSP1'),SYSDATE);
UPDATE MILEAGEMANAGER SET MILEAGE = (SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JOUNGHYU') 
										- (SELECT SEAT_MONEY FROM SEATPRICE WHERE PRICE_NO = 'MTSP1') WHERE ID = 'JOUNGHYU';
--마일리지 조회
SELECT MILEAGE FROM MILEAGEMANAGER WHERE ID = 'JOUNGHYU';

--결제 내역 조회
SELECT * FROM PAYMENT WHERE ID = 'JOUNGHYU' ORDER BY MILEAGE_TIME DESC;

-- 예매 전체 조회
--SELECT TICKETING_NO, THEATER_NAME, MOVIE_THEATER_NAME, MOVIE_NAME, MOVIE_TIME, SEAT_NO FROM TICKETING WHERE ID ='JOUNGHYU';
SELECT TICKETING_NO, THEATER_NAME, MOVIE_NAME FROM TICKETING, THEATER, MOVIE WHERE ID ='JOUNGHYU';

-- 예매 상세 조회
SELECT TICKETING_NO, THEATER_NAME, MOVIE_THEATER_NAME, MOVIE_NAME, MOVIE_TIME, SEAT_NO
	FROM TICKETING, THEATER, MOVIE_THEATER, MOVIE WHERE ID ='JOUNGHYU' AND TICKETING_NO = 'TKN3';




SELECT TICKETING_NO, THEATER_NO, MOVIE_NO, MOVIE_THEATER_NAME, MOVIE_TIMES, SEAT_NO, SEAT_MONEY
	FROM TICKETING JOIN MOVIE_THEATER
	USING(MOVIE_THEATER_NO)
	JOIN SEATMANAGER
	USING(THEATER_NO, MOVIE_THEATER_NAME)
	WHERE ID = 'JINSOOK';

SELECT *
	FROM TICKETING
		WHERE ID = 'JINSOOK'




    
 SELECT * FROM MOVIE_THEATER
	WHERE MOVIE_THEATER_NAME = '1관'
	AND MOVIE_NO = 'MN1';

ALTER TABLE MOVIE_THEATER ADD (TIMES VARCHAR2(2));




